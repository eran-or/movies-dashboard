{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/movies.js","redux/store.js","redux/actions/movies.js","components/Movie.js","components/Modal.js","helpers/checkValidYear.js","components/Home.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["RECEIVE_MOVIES","REQUEST_MOVIES","defaultState","movies","reducers_movies","state","arguments","length","undefined","action","type","update","isFetching","$set","didInvalidate","lastUpdated","receivedAt","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","receiveMovies","map","movie","Title","replace","toLowerCase","l","toUpperCase","Date","now","fetchMovies","s","dispatch","fetch","then","res","json","results","v","i","concat","title","push","catch","e","console","log","promises","Promise","all","Movie","props","buttonsMap","classname","handler","onEdit","text","onDelete","react_default","a","createElement","className","src","Poster","alt","Year","Runtime","Genre","Director","btn","key","onClick","Modali","_this$props","this","isOpen","toggle","children","footer","actionText","showActionButtons","reactstrap_es","color","Component","isValidYear","value","year","moment","trim","isNotFuture","isBefore","isAfter1924","isAfter","Home","editMode","deleteMode","addMode","selectedMovie","errorText","handleAction","id","mode","find","_this","selectedMovieId","setState","Object","objectSpread","defineProperty","handleChange","target","name","updateMovies","_this$state","_this$state$selectedM","copy","toConsumableArray","keys","_i","localeCompare","sensitivity","splice","unshift","_this2","_this$state2","_this$state2$selected","deleteModalFooter","selectedMode","modalFooter","toggleMode","m","components_Movie","Modal","onChange","connect","AppRouter","BrowserRouter","Switch","Route","path","component","exact","Boolean","location","hostname","match","store","createStore","applyMiddleware","thunk","app","es","routers_AppRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0e94b45.chunk.js","sourcesContent":["export const RECEIVE_MOVIES = 'RECEIVE_MOVIES'; \nexport const REQUEST_MOVIES = 'REQUEST_MOVIES';","import update from 'immutability-helper'\nimport { REQUEST_MOVIES, RECEIVE_MOVIES } from '../actions/actionTypes'\n\nconst defaultState = {\n  movies:[]\n}\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case REQUEST_MOVIES:\n      return update(state, {\n        isFetching: {$set:true},\n        didInvalidate: {$set:false}\n      })\n    case RECEIVE_MOVIES:  \n      return update(state, {\n        movies: {$set:action.movies},\n        isFetching: {$set:false},\n        didInvalidate: {$set:false},\n        lastUpdated: {$set:action.receivedAt}\n      })\n    default:\n      return state\n  }\n}","\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport movies from './reducers/movies'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  //Store cretion\n  const store = createStore(\n    movies,\n    composeEnhancers(applyMiddleware(thunk))\n  )\n  return store\n}","import { REQUEST_MOVIES, RECEIVE_MOVIES } from './actionTypes'\nfunction requestMovies() {\n  return {\n    type: REQUEST_MOVIES\n  }\n}\nfunction receiveMovies(movies) {\n  \n  return {\n    type: RECEIVE_MOVIES,\n    movies: movies.map(movie=>{\n      movie.Title = movie.Title.replace(/[^\\w* -]/g,\"\").toLowerCase().replace(/\\b\\w/g, l => l.toUpperCase())\n      return movie\n    }),\n    receivedAt: Date.now()\n  }\n}\n\nexport const fetchMovies = (s) => {\n  const themoviedbUrl = 'https://api.themoviedb.org/3/discover/movie?api_key=9dc58f8026e43c67f75c2a110b7d6162'\n  const omdbapiUrl = 'http://www.omdbapi.com/?&plot=full&apikey=bc2b28c9&t='\n  return dispatch => {\n    dispatch(requestMovies())\n    let movies = []\n    return fetch(themoviedbUrl)\n    .then(res => res.json()).then(json => json.results.map((v, i) =>\n      fetch(`${omdbapiUrl}${v.title}`)\n        .then(res => res.json())\n        .then(res => movies.push(res)).catch(e => console.log(e))\n    )).then(promises => {\n      Promise.all(promises).then(res => {\n        dispatch(receiveMovies(movies))\n      })\n    }).catch(e => console.log(e))\n  }\n}\n\nexport const updateMovies = (movies) => {\n  return dispatch => {\n    dispatch(receiveMovies(movies))\n  }\n}","import React from 'react'\n\nconst Movie = (props) => {\n  const { movie, onEdit, onDelete } = props\n  const buttonsMap = [\n    { classname: \"edit-btn mr-1\", handler: onEdit, text: \"Edit\" },\n    { classname: \"delete-btn\", handler: onDelete, text: \"Delete\" }\n  ]\n  return (\n    <div className=\"movie-box d-flex align-items-center align-items-sm-start rounded border flex-column mx-auto mb-2 flex-sm-row\">\n      <img src={movie.Poster} alt=\"\" className=\"rounded scaleDown\" />\n      <div className=\"d-flex flex-column col-12 py-2 movie-info col-sm-7\">\n        <h5>{movie.Title}</h5>\n        <p className=\"m-0\"><strong>Year:</strong>{movie.Year}</p>\n        <p className=\"m-0\"><strong>Runtime:</strong>{movie.Runtime}</p>\n        <p className=\"m-0\"><strong>Genre:</strong>{movie.Genre}</p>\n        <p className=\"mb-auto\"><strong>Director:</strong>{movie.Director}</p>\n        <div className=\"mt-auto\">\n        {buttonsMap.map((btn, i) => <button key={i} type=\"button\" className={`btn btn-primary ${btn.classname}`} onClick={btn.handler}>{btn.text}</button>)}\n      </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Movie;","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass Modali extends Component {\n\n  render() {\n    const {isOpen, toggle, children, title, footer} = this.props\n    const {action, actionText} = footer\n    const showActionButtons = (action)?true:false\n    \n    return (\n      <div>\n        <Modal isOpen={isOpen} toggle={toggle} className={this.props.className}>\n          <ModalHeader toggle={toggle}>{title || \"Modal title\"}</ModalHeader>\n          <ModalBody>\n            {children}\n          </ModalBody>\n          <ModalFooter>\n            {showActionButtons && <div>\n              <Button color=\"primary\" onClick={footer.action}>{actionText}</Button>{' '}\n              {<Button color=\"secondary\" onClick={toggle}>Cancel</Button>}\n              </div>}\n            {showActionButtons || <Button color=\"secondary\" onClick={toggle}>Close</Button>}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Modali","import moment from 'moment'\n\nconst isValidYear = (value) => {\n  const year = moment(value.trim(), \"YYYY\", true)\n  const isNotFuture = year.isBefore(moment())\n  const isAfter1924 = year.isAfter(moment(1924, \"YYYY\", true))\n  if (!isNotFuture || !isAfter1924) {\n    return false\n  }\n  return true\n}\n\nexport default isValidYear","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './App.css'\nimport { fetchMovies, updateMovies } from '../redux/actions/'\nimport Movie from './Movie'\nimport Modal from './Modal'\nimport isValidYear from '../helpers/checkValidYear'\nclass Home extends Component {\n  state = {\n    toggle: {\n      editMode: false,\n      deleteMode: false,\n      addMode: false\n    },\n    selectedMovie: {},\n    errorText: '',\n  }\n  componentDidMount() {\n    const { fetchMovies } = this.props\n    fetchMovies()\n  }\n\n  handleAction = (action, id) => {\n    const mode = [\"editMode\", \"deleteMode\", \"addMode\"].find((e) => e === action)\n\n    const selectedMovie = (mode === \"addMode\") ? undefined : this.props.movies[id]\n    const selectedMovieId = (mode === \"addMode\") ? undefined : id\n    this.setState({ toggle: { ...this.state.toggle, [mode]: true }, selectedMovie, selectedMovieId })\n  }\n\n  toggle = (mode) => {\n    this.setState({ toggle: { ...this.state.toggle, [mode]: !this.state.toggle[mode] }, errorText: \"\" })\n  }\n\n  handleChange = (e) => {\n    const value = e.target.value\n    const name = e.target.name\n    let errorText = \"\"\n\n    if (value === '') {\n      errorText = \"empty fields are not allowed!\"\n    } else if (name === 'Year') {\n      if (!isValidYear(value)) {\n        errorText = \"It Must be a valid year\"\n      }\n\n    }\n    this.setState({ selectedMovie: { ...this.state.selectedMovie, [name]: value }, errorText })\n  }\n\n  updateMovies = (action) => {\n    const { updateMovies, movies } = this.props\n    const { selectedMovie = {}, selectedMovieId, errorText } = this.state\n\n    if (errorText) {\n      return false\n    }\n\n    const copy = [...movies]\n    if (action !== \"deleteMode\") {\n      const keys = [\"Title\", \"Year\", \"Runtime\", \"Genre\", \"Director\"]\n\n      for (let key of keys) {\n        if (!selectedMovie[key]) {\n          this.setState({ errorText: \"empty fields are not allowed!\" })\n          return false\n        }\n      }\n\n      if (!isValidYear(selectedMovie[\"Year\"])) {\n        this.setState({ errorText: \"It Must be a valid year\" })\n        return false\n      }\n\n      const movieExist = copy.find(e => selectedMovie.Title.localeCompare(e.Title, 'en', { sensitivity: 'base' }) === 0)\n      if (movieExist) {\n        this.setState({ errorText: \"Movie exist, Please choose another Title.\" })\n        return false\n      }\n\n    }\n\n\n    if (action === \"deleteMode\") {\n      copy.splice(selectedMovieId, 1)\n    }\n    if (action === \"editMode\") {\n      copy[selectedMovieId] = selectedMovie\n    }\n    if (action === \"addMode\") {\n      copy.unshift(selectedMovie);\n    }\n\n    this.setState({ selectedMovie: undefined, selectedMovieId: undefined })\n    updateMovies(copy)\n    this.toggle(action)\n  }\n\n  render() {\n    const { movies } = this.props\n    const { toggle, selectedMovie = {}, errorText, selectedMovieId } = this.state\n    const { editMode, deleteMode, addMode } = toggle\n    const editModalFooter = { action: () => this.updateMovies(\"editMode\"), actionText: \"Save\" }\n    const deleteModalFooter = { action: () => this.updateMovies(\"deleteMode\"), actionText: \"OK\" }\n    const addModalFooter = { action: () => this.updateMovies(\"addMode\"), actionText: \"OK\" }\n    const selectedMode = (selectedMovieId !== undefined) ? editMode : addMode\n    const modalFooter = (selectedMovieId !== undefined) ? editModalFooter : addModalFooter\n    const toggleMode = (selectedMovieId !== undefined) ? \"editMode\" : \"addMode\"\n\n    return (\n      <div className=\"App row flex-column flex-sm-row m-auto\">\n        <button className=\"btn btn-link\" type=\"button\" onClick={() => this.handleAction(\"addMode\")}>Add New Movie</button>\n        {movies && movies.map((m, i) => <Movie key={i} movie={m} onEdit={() => this.handleAction(\"editMode\", i)} onDelete={() => this.handleAction(\"deleteMode\", i)} />)}\n        <Modal isOpen={selectedMode} toggle={() => this.toggle(toggleMode)} footer={modalFooter}>\n          <form >\n            <div className=\"form-row\">\n              <label className=\"col\">\n                Title:\n              <input className=\"form-control\" type=\"text\" name=\"Title\" value={selectedMovie.Title || ''} onChange={this.handleChange} />\n              </label>\n              <label className=\"col\">\n                Year:\n              <input className=\"form-control\" type=\"text\" name=\"Year\" value={selectedMovie.Year || ''} onChange={this.handleChange} />\n              </label>\n            </div>\n            <div className=\"form-row\">\n              <label className=\"col\">\n                Runtime:\n              <input className=\"form-control\" type=\"text\" name=\"Runtime\" value={selectedMovie.Runtime || ''} onChange={this.handleChange} />\n              </label>\n              <label className=\"col\">\n                Genre:\n              <input className=\"form-control\" type=\"text\" name=\"Genre\" value={selectedMovie.Genre || ''} onChange={this.handleChange} />\n              </label>\n            </div>\n            <label>\n              Director:\n              <input className=\"form-control\" type=\"text\" name=\"Director\" value={selectedMovie.Director || ''} onChange={this.handleChange} />\n            </label>\n            <div className=\"form-row\">\n              {errorText && <div className=\"m-0 alert alert-danger\">{errorText}</div>}<div className=\"m-0 alert\">&nbsp;</div>\n            </div>\n          </form>\n        </Modal>\n        <Modal isOpen={deleteMode} toggle={() => this.toggle(\"deleteMode\")} footer={deleteModalFooter}>\n          Are you sure you want to delete this movie?\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMovies: () => dispatch(fetchMovies()),\n  updateMovies: (movies) => dispatch(updateMovies(movies)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from '../components/Home'\n\nconst AppRouter = (props) => (\n  // <Router basename=\"/comment-feed/\">\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/\" component={Home} exact={true} />\n      </Switch>\n    </div>\n  </Router >\n);\n\nexport default AppRouter","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './redux/store'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport AppRouter from './routers/AppRouter'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = configureStore()\nconst app = (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}